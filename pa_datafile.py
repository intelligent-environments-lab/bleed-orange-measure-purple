# -*- coding: utf-8 -*-
"""
Created on Thu Feb 13 09:30:11 2020

@author: CalvinL2
"""

# %% Imports
import os

from datetime import timezone
import pandas as pd

from common_parent_datafile import CommonFile

# %%
class PAfile(CommonFile):
    """Stores and manipulates data from one file generated by a PurpleAir sensor"""
    def __init__(self, filename):
        # BUG Need to discriminate between primary and secondary files
        data = pd.read_csv(filename, index_col=False)

        # Remove leading backslash (if any)
        filename = filename[filename.rfind('/')+1:]

        self._parse_filename(filename)

        # Converts string to datetime object
        timestamps = CommonFile.str2date(data.loc[:, 'created_at'],
                                       '%Y-%m-%d %H:%M:%S %Z',
                                       tzone=timezone.utc)

        # Creates datetime column and makes it the index for the df,
            #use df.index.values or df.index.name to access
        data.insert(0, 'time', timestamps)
        data = data.set_index('time')

        # Defining instance variables for the object
        # TIP use dictionary
        self.filename = filename
        super().__init__(data)

    def _parse_filename(self, filename):
        # BUG account for edited filename

        # Some adjustments to format to make parsing easier
        filename = filename[filename.rfind('\\')+1:]
        filename = filename.replace('(', '').replace(')', '')

        # Iterates across parts of a file name with space as the seperator
        def iterate():
            nonlocal filename
            index = filename.find(' ')
            value = filename[0:index]
            filename = filename[index+1:]
            return value

        # Uses iterate function to extract data from the filename
        self.sensorname = iterate()
        self.sensor_environment = iterate()
        self.latitude = iterate()
        self.longitude = iterate()

    @staticmethod
    def import_pa_files(cwd, file_dir):
        """Returns a list of PAfile for every PurpleAir csv in the specified directory"""
        return [PAfile(file_dir+'\\'+filename)
                for filename in os.listdir(cwd+'\\'+file_dir)
                if filename.endswith(".csv") and filename.startswith("PA")]

    @property
    def pm25(self):
        """Returns PM 2.5 values in a panda series."""
        return self['PM2.5_ATM_ug/m3']

    @property
    def hourly_pm25(self):
        """Returns hourly averaged PM 2.5 values in a panda series."""
        return self.pm25.resample('H').mean()

    @property
    def hourly_temp(self):
        """Returns hourly temperature values in a panda series."""
        return self['Temperature_F'].resample('H').mean()
